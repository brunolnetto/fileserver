services:
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports: 
      - ${DATABASE_PORT}:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", $DATABASE_USER]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    environment:
      POSTGRES_HOST: ${DATABASE_HOST}
      POSTGRES_PORT: ${DATABASE_PORT}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}

  redis:
    restart: unless-stopped
    image: redis:7.0.5-alpine 
    ports: 
      - "6379:6379"

  web:
    restart: unless-stopped
    build:
      context: .
      dockerfile: build/Dockerfile
    volumes:
      - .:/app
      - static_volume:/app/backend/django_static
    ports:
      - "8000:8000"
    expose:
        - 8000
    env_file:
      - .env
    depends_on:
      - db
      - redis

  celery-worker:
    build:
      context: .
      dockerfile: build/Dockerfile
    entrypoint: /app/build/celery/entrypoint-worker.sh
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis

  celery-beat:
    build:
      context: .
      dockerfile: build/Dockerfile
    entrypoint: /app/build/celery/entrypoint-beat.sh
    volumes:
      - .:/apps
    env_file:
      - .env
    depends_on:
      - db
      - redis

  flower:
    image: mher/flower:latest
    command: ['celery', 'flower']
    ports:
      - "5555:5555"
    env_file:
      - .env
    depends_on:
      - redis
      - celery-worker

volumes:
  static_volume: {}
  postgres_data: {}
